function BoardDrawer.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 2
push argument 1
pop this 3
push argument 2
pop this 4
push pointer 0
return
function BoardDrawer.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function BoardDrawer.drawSquareBorders 0
push argument 0
push argument 1
push argument 0
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 0
push argument 2
add
push argument 1
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 2
add
push argument 1
push argument 0
push argument 2
add
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 2
add
push argument 0
push argument 2
add
push argument 1
push argument 2
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function BoardDrawer.drawBorders 0
push argument 0
pop pointer 0
push argument 3
call Screen.setColor 1
pop temp 0
push this 0
push argument 2
push this 4
call Math.multiply 2
add
push constant 1
sub
push this 1
push argument 1
push this 4
call Math.multiply 2
add
push constant 1
sub
push this 4
push constant 2
add
call BoardDrawer.drawSquareBorders 3
pop temp 0
push constant 0
return
function BoardDrawer.changePointer 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
push constant 0
call BoardDrawer.drawBorders 4
pop temp 0
push pointer 0
push argument 1
push argument 2
call BoardDrawer.cleanSideSquares 3
pop temp 0
push pointer 0
push argument 3
push argument 4
push constant 0
not
call BoardDrawer.drawBorders 4
pop temp 0
push constant 0
return
function BoardDrawer.draw 2
push argument 0
pop pointer 0
push argument 1
pop this 0
push argument 2
pop this 1
push constant 0
not
call Screen.setColor 1
pop temp 0
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 1
push this 3
lt
not
if-goto WHILE_END1
push argument 1
push local 1
push this 4
call Math.multiply 2
add
push argument 2
push local 0
push this 4
call Math.multiply 2
add
push this 4
call BoardDrawer.drawSquareBorders 3
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
push constant 0
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function BoardDrawer.cleanSideSquares 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 2
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push argument 2
push constant 1
sub
push this 4
call Math.multiply 2
add
push this 1
push argument 1
push this 4
call Math.multiply 2
add
push this 4
call BoardDrawer.drawSquareBorders 3
pop temp 0
label IF_FALSE0
push argument 1
push constant 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push argument 2
push this 4
call Math.multiply 2
add
push this 1
push argument 1
push constant 1
sub
push this 4
call Math.multiply 2
add
push this 4
call BoardDrawer.drawSquareBorders 3
pop temp 0
label IF_FALSE1
push argument 2
push this 3
push constant 1
sub
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push argument 2
push constant 1
add
push this 4
call Math.multiply 2
add
push this 1
push argument 1
push this 4
call Math.multiply 2
add
push this 4
call BoardDrawer.drawSquareBorders 3
pop temp 0
label IF_FALSE2
push argument 1
push this 2
push constant 1
sub
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
push argument 2
push this 4
call Math.multiply 2
add
push this 1
push argument 1
push constant 1
add
push this 4
call Math.multiply 2
add
push this 4
call BoardDrawer.drawSquareBorders 3
pop temp 0
label IF_FALSE3
push constant 0
return
function BoardDrawer.drawHashtag 4
push argument 0
pop pointer 0
push pointer 0
push constant 0
push argument 1
push argument 2
call BoardDrawer.fillSquare 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push argument 2
push this 4
call Math.multiply 2
add
push constant 5
add
pop local 0
push local 0
push constant 2
add
pop local 2
push this 1
push argument 1
push this 4
call Math.multiply 2
add
push constant 2
add
pop local 1
push local 1
push constant 15
add
pop local 3
push local 0
push local 1
push local 2
push local 3
call Screen.drawRectangle 4
pop temp 0
push local 2
push constant 5
add
pop local 0
push local 0
push constant 2
add
pop local 2
push local 0
push local 1
push local 2
push local 3
call Screen.drawRectangle 4
pop temp 0
push this 0
push argument 2
push this 4
call Math.multiply 2
add
push constant 2
add
pop local 0
push local 0
push constant 15
add
pop local 2
push this 1
push argument 1
push this 4
call Math.multiply 2
add
push constant 5
add
pop local 1
push local 1
push constant 2
add
pop local 3
push local 0
push local 1
push local 2
push local 3
call Screen.drawRectangle 4
pop temp 0
push local 3
push constant 5
add
pop local 1
push local 1
push constant 2
add
pop local 3
push local 0
push local 1
push local 2
push local 3
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function BoardDrawer.drawExclamation 4
push argument 0
pop pointer 0
push pointer 0
push constant 0
push argument 1
push argument 2
call BoardDrawer.fillSquare 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push argument 2
push this 4
call Math.multiply 2
add
push this 4
push constant 2
call Math.divide 2
add
push constant 1
sub
pop local 0
push local 0
push constant 2
add
pop local 2
push this 1
push argument 1
push this 4
call Math.multiply 2
add
push constant 2
add
pop local 1
push local 1
push constant 10
add
pop local 3
push local 0
push local 1
push local 2
push local 3
call Screen.drawRectangle 4
pop temp 0
push local 3
push constant 2
add
pop local 1
push local 0
push constant 2
add
pop local 2
push local 1
push constant 2
add
pop local 3
push local 0
push local 1
push local 2
push local 3
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function BoardDrawer.drawX 4
push argument 0
pop pointer 0
push pointer 0
push constant 0
push argument 1
push argument 2
call BoardDrawer.fillSquare 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push argument 2
push this 4
call Math.multiply 2
add
pop local 0
push local 0
push this 4
add
pop local 2
push this 1
push argument 1
push this 4
call Math.multiply 2
add
pop local 1
push local 1
push this 4
add
pop local 3
push local 0
push local 1
push local 2
push local 3
call Screen.drawLine 4
pop temp 0
push local 0
push local 3
push local 2
push local 1
call Screen.drawLine 4
pop temp 0
push constant 0
return
function BoardDrawer.clearCursor 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push argument 2
push this 4
call Math.multiply 2
add
push constant 1
sub
push this 1
push argument 1
push this 4
call Math.multiply 2
add
push constant 1
sub
push this 4
push constant 2
add
call BoardDrawer.drawSquareBorders 3
pop temp 0
push pointer 0
push argument 1
push argument 2
call BoardDrawer.cleanSideSquares 3
pop temp 0
push constant 0
return
function BoardDrawer.fillSquare 0
push argument 0
pop pointer 0
push argument 1
call Screen.setColor 1
pop temp 0
push this 0
push argument 3
push this 4
call Math.multiply 2
add
push constant 2
add
push this 1
push argument 2
push this 4
call Math.multiply 2
add
push constant 2
add
push this 0
push this 4
add
push argument 3
push this 4
call Math.multiply 2
add
push constant 2
sub
push this 1
push this 4
add
push argument 2
push this 4
call Math.multiply 2
add
push constant 2
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function BoardDrawer.drawSunkShip 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push argument 2
lt
not
if-goto WHILE_END0
push local 1
push argument 1
add
pop pointer 1
push that 0
pop local 0
push pointer 0
push local 0
call Point.getX 1
push local 0
call Point.getY 1
call BoardDrawer.drawX 3
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
