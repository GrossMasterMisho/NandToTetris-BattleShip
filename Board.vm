function Board.new 0
push constant 12
call Memory.alloc 1
pop pointer 0
push argument 0
push argument 1
call Matrix.new 2
pop this 1
push argument 0
push argument 1
call Matrix.new 2
pop this 2
push constant 20
pop this 3
push argument 0
push argument 1
push constant 20
call BoardDrawer.new 3
pop this 0
push constant 0
pop this 4
push constant 0
pop this 5
push argument 0
pop this 8
push argument 1
pop this 9
push constant 7
pop this 11
push this 11
call Array.new 1
pop this 10
push pointer 0
return
function Board.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push constant 7
lt
not
if-goto WHILE_END0
push local 1
push this 10
add
pop pointer 1
push that 0
pop local 0
push local 0
call Ship.dispose 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push this 10
call Array.dispose 1
pop temp 0
push this 0
call BoardDrawer.dispose 1
pop temp 0
push this 2
call Matrix.dispose 1
pop temp 0
push this 1
call Matrix.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Board.getRows 0
push argument 0
pop pointer 0
push this 8
return
function Board.getColumns 0
push argument 0
pop pointer 0
push this 9
return
function Board.setShips 0
push argument 0
pop pointer 0
push argument 1
pop this 10
push constant 0
return
function Board.draw 0
push argument 0
pop pointer 0
push this 0
push argument 1
push argument 2
call BoardDrawer.draw 3
pop temp 0
push constant 0
return
function Board.setCurrentPointer 0
push argument 0
pop pointer 0
push this 0
push this 4
push this 5
push argument 1
push argument 2
call BoardDrawer.changePointer 5
pop temp 0
push argument 1
pop this 4
push argument 2
pop this 5
push constant 0
return
function Board.squareFilled 0
push argument 0
pop pointer 0
push this 1
push argument 1
push argument 2
call Matrix.get 3
return
function Board.moveUp 0
push argument 0
pop pointer 0
push this 4
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push this 4
push constant 1
sub
push this 5
call Board.setCurrentPointer 3
pop temp 0
label IF_FALSE0
push constant 0
return
function Board.moveDown 0
push argument 0
pop pointer 0
push this 4
push this 8
push constant 1
sub
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push this 4
push constant 1
add
push this 5
call Board.setCurrentPointer 3
pop temp 0
label IF_FALSE0
push constant 0
return
function Board.moveLeft 0
push argument 0
pop pointer 0
push this 5
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push this 4
push this 5
push constant 1
sub
call Board.setCurrentPointer 3
pop temp 0
label IF_FALSE0
push constant 0
return
function Board.moveRight 0
push argument 0
pop pointer 0
push this 5
push this 9
push constant 1
sub
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push this 4
push this 5
push constant 1
add
call Board.setCurrentPointer 3
pop temp 0
label IF_FALSE0
push constant 0
return
function Board.placeShip 1
push argument 0
pop pointer 0
push this 1
push this 4
push this 5
call Matrix.get 3
not
pop local 0
push this 1
push this 4
push this 5
push local 0
call Matrix.set 4
pop temp 0
push this 0
push local 0
push this 4
push this 5
call BoardDrawer.fillSquare 4
pop temp 0
push constant 0
return
function Board.checkGameStatus 0
push argument 0
pop pointer 0
push this 11
push constant 0
eq
not
return
function Board.clearCursor 0
push argument 0
pop pointer 0
push this 0
push this 4
push this 5
call BoardDrawer.clearCursor 3
pop temp 0
push constant 0
return
function Board.moveMade 2
push argument 0
pop pointer 0
push this 2
push this 4
push this 5
call Matrix.get 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push this 1
push this 4
push this 5
call Matrix.get 3
pop local 0
push this 2
push this 4
push this 5
push constant 0
not
call Matrix.set 4
pop temp 0
push local 0
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Board.getShotShip 1
pop local 1
push local 1
push this 4
push this 5
call Ship.shoot 3
pop temp 0
push local 1
call Ship.isSunk 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push local 1
call Ship.getPoints 1
push local 1
call Ship.getLength 1
call BoardDrawer.drawSunkShip 3
pop temp 0
push this 11
push constant 1
sub
pop this 11
goto IF_END2
label IF_FALSE2
push this 0
push this 4
push this 5
call BoardDrawer.drawExclamation 3
pop temp 0
label IF_END2
push this 1
push this 4
push this 5
push constant 0
call Matrix.set 4
pop temp 0
push constant 0
not
return
goto IF_END1
label IF_FALSE1
push this 0
push this 4
push this 5
call BoardDrawer.drawHashtag 3
pop temp 0
push constant 0
return
label IF_END1
function Board.getShotShip 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push constant 7
lt
not
if-goto WHILE_END0
push local 1
push this 10
add
pop pointer 1
push that 0
pop local 0
push local 0
push this 4
push this 5
call Ship.containsPoint 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
return
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.fatalShot 1
push argument 0
pop pointer 0
push pointer 0
call Board.getShotShip 1
pop local 0
push local 0
call Ship.isSunk 1
return
function Board.getLastMove 0
push argument 0
pop pointer 0
push this 4
push this 5
call Point.new 2
return
function Board.placeSingleShip 3
push argument 0
pop pointer 0
push constant 0
pop local 2
push argument 1
call Ship.getPoints 1
pop local 0
label WHILE_EXP0
push local 2
push argument 1
call Ship.getLength 1
lt
not
if-goto WHILE_END0
push local 2
push local 0
add
pop pointer 1
push that 0
pop local 1
push this 1
push local 1
call Point.getX 1
push local 1
call Point.getY 1
push constant 0
not
call Matrix.set 4
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.generateValidPointsForShip 3
push argument 0
pop pointer 0
call PointsVector.new 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 8
lt
not
if-goto WHILE_END0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push this 9
lt
not
if-goto WHILE_END1
push argument 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 1
push local 2
push argument 1
call BoardValidator.validForVerticalShipPlacement 4
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push local 1
push local 2
call Point.new 2
call PointsVector.add 2
pop temp 0
label IF_FALSE1
goto IF_END0
label IF_FALSE0
push pointer 0
push local 1
push local 2
push argument 1
call BoardValidator.validForHorizontalShipPlacement 4
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push local 1
push local 2
call Point.new 2
call PointsVector.add 2
pop temp 0
label IF_FALSE2
label IF_END0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
